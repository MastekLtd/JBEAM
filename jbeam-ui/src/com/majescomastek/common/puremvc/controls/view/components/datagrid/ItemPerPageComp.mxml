<?xml version="1.0" encoding="utf-8"?>
<!--
 * Copyright (c) 2014 Mastek Ltd. All rights reserved.
 * 
 * This file is part of JBEAM. JBEAM is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Lesser
 * General Public License as published by the Free Software Foundation.
 *
 * JBEAM is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General
 * Public License for the specific language governing permissions and 
 * limitations.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with JBEAM. If not, see <http://www.gnu.org/licenses/>.
 *
 * @author ritesh.umathe
 *
 * $Revision:: 1                                                                                                       $
 *	
 * $Header:: /Product_Base/Projects/Billing-UI/FLEX UI DEV/src/com/majescomastek/common/puremvc/controls/view/compon $	
 *
 * $Log:: /Product_Base/Projects/Billing-UI/FLEX UI DEV/src/com/majescomastek/common/puremvc/controls/view/compon $
 * 
 * 1     3/05/10 4:27p Sanjay.sharma
 * Initial commit of base flex controls and advanced datagrid control
 * 
 * 1     3/03/10 12:51p Admin
 * 
 * 2     2/25/10 7:27p Sanjay.sharma
 * Added header
 * 
-->
<containers:BaseHBox xmlns:mx="http://www.adobe.com/2006/mxml" horizontalGap="0"
	xmlns:controls="com.majescomastek.common.controls.framework.*"
	xmlns:containers="com.majescomastek.common.containers.framework.*">
	<mx:Script>
		<![CDATA[
			import com.majescomastek.common.events.PaginatedDataGridEvent;
			import mx.collections.ArrayCollection;
			
			/** it contains number which is display in component **/
			[Bindable]
			public var itemPerPageArr:ArrayCollection;
			
			/** current how many rows are displaying **/
			[Bindable]
			public var _currentRowCount:int;
			
			/**
			 * get call when user click on numbers
			 * and it also dispach event to parent component 
			 */ 
			private function itemPerPageClickHandler(event:Event) :void
			{
				var dataEvent:PaginatedDataGridEvent =
					new PaginatedDataGridEvent(PaginatedDataGridEvent.ITEM_PER_PAGE_CLICK_EVENT, event.currentTarget.text);
				dispatchEvent(dataEvent);
			}
		]]>
	</mx:Script>
	<controls:BaseLabel text="Item Per Page :" visible="{itemPerPageArr.length > 0}"/>
	<mx:Repeater  id="rpt" dataProvider="{itemPerPageArr}">
		<controls:BaseLabel text="{rpt.currentItem}" mouseChildren="false" useHandCursor="true"
			textDecoration="{rpt.currentItem == _currentRowCount ? 'none':'underline'}"
			click="itemPerPageClickHandler(event)"  buttonMode="true"/>
		<controls:BaseLabel text="{(rpt.currentIndex+1)!= itemPerPageArr.length ?'|':''}" 
			width="10" />
	</mx:Repeater>	
</containers:BaseHBox>