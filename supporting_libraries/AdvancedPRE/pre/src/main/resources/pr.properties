#!-----------------------------------------------------------------------------#!
#! $Revision: 34445 $
#!-----------------------------------------------------------------------------#!
#
#The property value can have variables identified as ${variable}.
#Such variables are expended at runtime using either the system property or
#the property defined in this file.
#
#-----------------------------------------------------------
# Process Requests of Type....
# Configures PRE for a set of requests types. Request PROFILING..
#-----------------------------------------------------------
#requesttypefilter determines the method either INCLUDE or EXCLUDE 
requesttypefilter=INCLUDE

#Configures the PRE for a specific type or types of request(s).
#comma separated values.
processrequesttype=GENERAL

#-----------------------------------------------------------
#Connection properties
#-----------------------------------------------------------

# All other connection properties are moved to poolconfig.xml or pool.properties file.

#The maximum queued requests to be fetched in a single fetch.
#The higher the number better will be the performance.
#Default value 60. Integer value.
maximumfetchsizeinsinglefetch=60

#Data Source factory implementation.
#This class must implement stg.pr.engine.datasource.IDataSourceFactory
#Default implementation is given and can be used in conjunction with JDBCPoolV16.03
#use the class name stg.pr.engine.datasource.defaultimpl.PREDataSourceFactory
dataSourceFactory=stg.pr.engine.datasource.defaultimpl.PREDataSourceFactory

#Defines the configuration file for the data source. This can either be properties or XML file.
#This file should define the context name and properties such that the DataSource factory can make
#use of and return an appropriate datasource based on the names stored against
#dsforstandaloneeng and dsforgroupeng.
dataSourceFactoryConfigFile=${pre.home}/pre/src/main/resources/poolconfig.xml

#Data source Name for the StandAlone Engine
#PRE will use the JDBC connections from this data source. The number of parallel process that PRE will spwan, is
#determined by the property standalonemaximumthreads. The maximum number of JDBC connections in this data source
#should be equal standalonemaximumthreads + 1. If the same data source is being used for Group Engine then the 
#maximum JDBC connections should be equal to standalonemaxiumthreads + groupmaxiumthreads + 2;
dsforstandaloneeng=ST

#Defines the maximum thread size for stand alone request engine.
standalonemaxiumthreads=6

#Data Source Name for the Group Engine
#PRE will use the JDBC connections from this data source. The number of parallel process that PRE will spwan, is
#determined by the property groupmaxiumthreads. The maximum number of JDBC connections in this data source
#should be equal groupmaxiumthreads + 1. If the same data source is being used for StandAlone Engine then the 
#maximum JDBC connections should be equal to standalonemaxiumthreads + groupmaxiumthreads + 2;
dsforgroupeng=GRP

#Defines the maximum thread size for grouped request engine.
groupmaxiumthreads=1

#-------------------------------------------------------------
#Request Parameters related properties
#-------------------------------------------------------------
paramdateformat=dd/MM/yyyy
paramtimeformat=HH:mm:ss
paramdatetimeformat=${paramdateformat} ${paramtimeformat}
paramarrvaluedelim=|

#-------------------------------------------------------------
#Request Log File properties
#Path must have a trailing slash /
#-------------------------------------------------------------
requestlogfilepath=${pre.home}/logs/requestfiles/
requestlogfilemaxsize=512000
requestlogfileurl=${requestlogfilepath}
requestlogfileextension=html

#-------------------------------------------------------------
#Other System properties
#-------------------------------------------------------------
#This property is used by the engine to sleep if there are no
#queued requests for processing. Time in Seconds.
waitinterval=15

#-------------------------------------------------------------
#Custom Class Loader related properties
#Path must have a trailing slash /
# IMPORANT read the note for useprecustomclassloader.
#-------------------------------------------------------------
#The directory from where the custom classloader will load classes
#objclasspathforclassloader=C:/Documents and Settings/kedarr/workspace/GMAC/bin/
objclasspathforclassloader=${pre.home}/pre-examples/target/classes

#List of classes, delimited by a ;, that shouldnt be loaded by the custom classloader
#Last character must be a ;
systemloadedclasses=java.;org.;stg.;oracle.;javax.;com.sun.;sun.;jdbc.;com.tc.;

#Indicates whether the custom classloader has to reload classes or not
reloadobjclasses=Y

#Make use of the PRE Custom Class Loader.
#If the following property is set to false then it must be ensured that the path
#specified in the property objclasspathforclassloader is included in the system
#class path. If not done so, then the System Class loader will not able to load the
#classes. The properties objclasspathforclassloader, systemloadedclasses and 
#reloadobjclasses are ignored.
useprecustomclassloader=false

#-------------------------------------------------------------
#Scheduler related properties
#-------------------------------------------------------------
#The class that generates the next request id.
#schedulerequestidgenerator=stg.pr.engine.scheduler.CRequestScheduler
schedulerequestidgenerator=com.myapp.preimpl.CRequestIdGenerator

#The following variable avoids infinite loop. If the job that implementation of the ICalendar interface
#goes into an infinite loop and always returns false then the scheduler will terminate the schedule and
#come out of the loop after the said number of iterations.
#This is number iterations (counter) that the scheduler applied the WeekDayCheck or ICalendar check.
icalendarinfiniteloopterminationcounter=10

#The following property is used to determine whether the a new request should be created in case of a retry
#or the existing request be updated with a new scheduled time as per the retry details.
#valid values are CREATE or UPDATE. Case-Sensitive.
retryOption=UPDATE

#-------------------------------------------------------------
#Group Engine ON / OFF
#-------------------------------------------------------------
#If the value of the property defined below if OFF then the group
#engine will not be started.
groupengine=OFF
#-------------------------------------------------------------
#Stuck Thread Interval
#-------------------------------------------------------------
#This property is used for sleeping in between the process for
#checking the Stuck Thread. Time in Minutes.
stuckthreadmonitorinterval=2

#This property is used for checking the JOBs at a regular intervals
#after they have crossed the Stuck Thread Maximum Limit. A mail
#will be escalated. Time in minutes. Default is 30 minutes.
jobmonitorescalationtimeinterval=4

#-------------------------------------------------------------
#Mail Notification ON or OFF
#-------------------------------------------------------------
#This property is used to start the Mail Notification in case
#of STUCK Threads.
mailnotification=OFF

#This property is used for debuging mails. false means no debuging
#and true means debuging.
maildebug=false

#The mail type 
mailtype=SMTP

#-------------------------------------------------------------
#Terminate the Process if the process crosses STUCK THREAD MAX LIMIT
#This does not necessarily kill that process. The called class if
#also implements interface ITerminatProcess then PRE will initiate a
#call to terminate() method on that object.
#The actual termination of the process is left to the implementor of
#the class ITerminatProcess.
#-------------------------------------------------------------
terminateprocess=Y

#-------------------------------------------------------------
#Web Service
#-------------------------------------------------------------
#The Web Service ON or OFF
webservice=ON

#This is the number of threads the PRE will create and pool.
webservicethreadpoolsize=5

#This is the number of threads the PRE 
#The Web Service port number. The service will use the port specified
#for deploying web services. If the port is already in use then the port
#is auto incremented and the next port is tried.
webserverport=15004

#The Web page will be refreshed depending upon the value specfied for
#webpagerefresh.
webpagerefresh=10

#Encrypted properties. Identify all the properties that need not be shown
#on the web services or shown as ******** separated out with ,
#Each property file can have this value. The Web Service will not show the
#values of such properties.
encryptedproperties=

#-------------------------------------------------------------
#Current Timestamp.
#If the value is set to DATABASE then the engine will get the current
#timestamp from the Database. Otherwise the current timestamp will be
#taken from the server on which the PRE is installed.
#NOTE that the current Database supported are Oracle, Microsoft SQL
#and IBM DB2. To make the PRE independent of the Database do not set
#the value for this property. If the value is anything other than DATABASE
#then the server time is picked and it reduces one query being fired at the
#database to retrieve the time.
#-------------------------------------------------------------
currenttimestamp=SERVER

#-------------------------------------------------------------
#NET Properties
#The following properties are from JDK1.4 onwards. These properties
#will allow the connection timeout or read timeout for any class that
#opens the URLConnection. Thus ensure that the thread is not stuck
#for ever.
#NOTE: the properties sun.net.client.defaultConnectTimeout and the
#sun.net.client.defaultReadTimeout may not be supported in future
#releases of JDK though they are being supported in JDK1.4.x. These
#properties are SUN implementation specific. Though JDK1.5.0 supports
#these properties.
#-------------------------------------------------------------
#Indicates if keep alive (persistent) connections should be supported.
#Persistent connections improve performance by allowing the underlying
#socket connection be reused for multiple http requests.
#The default is true and thus persistent connections will be used with
#http 1.1 servers. Set to 'false' to disable the use of persistent
#connections.
http.keepAlive=true

#If HTTP keep-alive is enabled, this value is the number of idle
#connections that will be simultaneously kept alive, per-destination.
http.maxConnections=10

#These properties specify the default connect and read timeout (resp.)
#for the protocol handler used by java.net.URLConnection.
#sun.net.client.defaultConnectTimeout specifies the timeout
#(in milliseconds) to establish the connection to the host. For example
#for http connections it is the timeout when establishing the connection
#to the http server. For ftp connection it is the timeout when
#establishing the connection to ftp servers.
sun.net.client.defaultConnectTimeout=-1

#sun.net.client.defaultReadTimeout specifies the timeout (in milliseconds)
#when reading from input stream when a connection is established to a
#resource.
sun.net.client.defaultReadTimeout=-1

#-------------------------------------------------------------
#PRE SQL Queries for Generating Sequences..
#If there happens to be different logic to generate the Sequence number and/or an SQL
#can not be executed to generate the sequence number then kindly write a class that
#implements stg.pr.engine.scheduler.IRequestIdGenerator and implement your own logic 
#to generate the sequence number.
# 
#The default class executes the following query based on the JDBC connection type.
#Refer to jdbctypes.properties for different types of supported Databases. Ensure that
#ORACLE, DB2 or for that matter any new type is added in jdbctypes.properties files and 
#the same gets reflected in here exactly as it appears. This is case sensitive. Ideally all
#upper case is preferred way of denoting the jdbc type.
#-------------------------------------------------------------
ORACLE.sequence.sql=SELECT (TO_NUMBER(TO_CHAR(SYSDATE, 'yyyymmdd')) * 10000) + SEQ_INTERFACE_REQ_ID.NEXTVAL FROM  DUAL
DB2.sequence.sql=SELECT nextval FOR seq_interface_req_id FROM sysibm.sysdummy1

#Getting the system date from database provided the property currenttimestamp points to DATABASE.

ORACLE.timestamp.sql=SELECT sysdate FROM dual
DB2.timestamp.sql=SELECT current timestamp FROM sysibm.sysdummy1
MSSQL.timestamp.sql=Select getDate()
MYSQL.timestamp.sql=SELECT NOW()

#-------------------------------------------------------------
#Reboot properties....
#-------------------------------------------------------------
#Maximum number of Retries the Engine should do. 
rebootmaxcounter=3

#The wait time in minutes before the reboot sequence is started. 
sleepbeforereboottime=1

#-------------------------------------------------------------
#JVM Runtime properties
#-------------------------------------------------------------
#Any arguments to the JVM such as -Xms or -Xmx or any boothclasspath etc can be set here. The entire value should not be in double quotes.
#The default separator is a space. The value that must have a space can be encapsulated in double quotes denoting that it is a single word. 
#A double quote within a quoted string is ignored.
# Add -Dgenlic=true or false if the license is to be requested. In case the value is set to true, you may specify the 
# license request file name along with location in the system property as -Dlicreqfile=C:/lic.req
#
#teraHome=D:/kedar/Mastek/workspace/AdvancedPRE
#javaruntimevmargs=-Xbootclasspath/p:${teraHome}/dso-boot-hotspot_win32_160_16.jar -Dtc.config=${teraHome}/resources/tc-config.xml -Dtc.install-root="D:/kedar/Eclipse-3.5/eclipse/plugins/org.terracotta.dso_3.2.1.r14822_v20100405" -Xms32M -Xmx64M -Dpre.home="${pre.home}" -Demail.store="D:/pre-email.store" 
javaruntimevmargs=-Xms32M -Xmx64M -Dpre.home="${pre.home}" -Demail.store="D:/pre-email.store" -Dcom.sun.management.jmxremote.port=1099 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false
# -Dgenlicreq=true -Dlicreqfile=D:/prelicense.lrq

javaextraclasspath=

#-------------------------------------------------------------
#Startup Classes. Classes that needs to be loaded during startup.
#fully qualified class name separated with semicolon (;)
#The class must implement stg.pr.engine.Service interface.
#Refer to pre-plugins project
#-------------------------------------------------------------
startUpClasses=
#com.mmpnc.pre.plugins.ICDService;ReportGenerator:com.mmpnc.pre.plugins.ReportService


#-------------------------------------------------------------
#Classes that will get notification from the engine about request status change.
#fully qualified class name separated with semicolon (;)
#The class must implement stg.pr.engine.RequestStatusListener interface.
#-------------------------------------------------------------
requeststatuslisteners=
